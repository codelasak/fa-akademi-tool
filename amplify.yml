version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Selecting Node.js version..."
        - |
          export NVM_DIR=~/.nvm
          if [ -s "$NVM_DIR/nvm.sh" ]; then . "$NVM_DIR/nvm.sh"; fi
          if command -v nvm >/dev/null 2>&1; then
            nvm install 20 && nvm use 20
          fi
          node -v
        - echo "Installing pnpm..."
        - npm install -g pnpm@9.0.6
        - echo "Setting up pnpm store..."
        - pnpm config set store-dir .pnpm-store
        - echo "Installing dependencies (including dev) ..."
        - export NODE_ENV=development
        - pnpm install --no-frozen-lockfile --prefer-offline
        - echo "Verifying PostCSS toolchain is present..."
        - node -e "console.log('tailwindcss:', require.resolve('tailwindcss/package.json'))"
        - node -e "console.log('autoprefixer:', require.resolve('autoprefixer/package.json'))"
        - node -e "console.log('postcss:', require.resolve('postcss/package.json'))"
        - echo "Generating Prisma client..."
        - pnpm run prisma:generate
    build:
      commands:
        - echo "Setting up environment for AWS Amplify..."
        - export NODE_ENV=production
        - export NEXT_TELEMETRY_DISABLED=1
        - export SKIP_INSTALL_SIMPLE_GIT_HOOKS=1
        - export CI=true
        - export DISABLE_DB_DURING_BUILD=1
        - echo "Checking critical env vars (presence only) ..."
        - |
          if [ -n "$DATABASE_URL" ]; then echo "DATABASE_URL present"; else echo "DATABASE_URL MISSING"; fi
          if [ -n "$NEXTAUTH_URL" ]; then echo "NEXTAUTH_URL present"; else echo "NEXTAUTH_URL MISSING"; fi
          if [ -n "$NEXTAUTH_SECRET" ]; then echo "NEXTAUTH_SECRET present"; else echo "NEXTAUTH_SECRET MISSING"; fi
        - echo "Writing .env.production for build-time inlining (no values printed) ..."
        - |
          printf "DATABASE_URL=%s\n" "$DATABASE_URL" > .env.production
          [ -n "$NEXTAUTH_URL" ] && printf "NEXTAUTH_URL=%s\n" "$NEXTAUTH_URL" >> .env.production || true
          [ -n "$NEXTAUTH_SECRET" ] && printf "NEXTAUTH_SECRET=%s\n" "$NEXTAUTH_SECRET" >> .env.production || true
          printf "NODE_ENV=production\nNEXT_TELEMETRY_DISABLED=1\n" >> .env.production
        - echo "Running Next.js build..."
        - pnpm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - .pnpm-store/**/*
